{"version":3,"file":"index.es.js","sources":["../src/index.ts"],"sourcesContent":["export const sum = (a: number, b: number): number => a + b;\n\nexport const isMobile = () => {\n    const check = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|Mobile|mobile|CriOS|Windows Phone/i\n    return check.test(navigator.userAgent)\n};\n\nexport const isDesktop = () => !isMobile();\n\nexport const checkValidUrl = (url: string) => {\n  const pattern = new RegExp(\n      '^(https?:\\\\/\\\\/)?' + // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n      'i'\n  ); // fragment locator\n\n  return pattern.test(url)\n};\n\nexport const lowerBound = (num: number, limit: number) => {\n  return num >= limit ? num : limit\n};\n\nexport const sleep = (ms: number) => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n};\n\nexport const capitalizeWords = (str: String) => {\n  return str.replace(/\\w\\S*/g, function(txt) {\n     return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n  })\n};\n\nexport const toSnakeCase = (str: String) =>\n    // @ts-ignore\n    str.match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n        .map(strLower => strLower.toLowerCase())\n        .join('_');\n\nexport const validateEmail = (email: String) => {\n  const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return regex.test(email.toLowerCase())\n};\n\n/**\n* @link https://www.qodo.co.uk/blog/javascript-restrict-keyboard-character-input/\n* @param _myField\n* @param evt\n* @param restrictionType [digitsOnly, floatOnly, alphaOnly]\n*/\nexport const restrictCharacters = (_myField: HTMLOrSVGElement, evt: KeyboardEvent, restrictionType: string): any => {\n    // @ts-ignore\n    const self = _myField;\n    let restrict;\n  switch (restrictionType) {\n     case 'digitsOnly':\n         restrict = /[1234567890]/g;\n        break;\n     case 'floatOnly':\n         restrict = /[0-9.]/g;\n        break;\n     case 'alphaOnly':\n         restrict = /[A-Za-z]/g;\n        break;\n\n     default:\n        return false\n  }\n\n  let code = (typeof evt.which !== \"undefined\") ? evt.which : evt.keyCode;\n\n  const character = String.fromCharCode(code);\n  // if they pressed esc... remove focus from field...\n  if (code === 27) {\n      self.blur();\n     return false\n  }\n  // ignore if they are press other keys\n  // strange because code: 39 is the down key AND ' key...\n  // and DEL also equals .\n  if (\n      !evt.ctrlKey &&\n      code !== 9 &&\n      code !== 8 &&\n      code !== 36 &&\n      code !== 37 &&\n      code !== 38 &&\n      (code !== 39 || (code === 39 && character === \"'\")) &&\n      code !== 40\n  ) {\n     return !!character.match(restrict)\n  }\n};\n\nexport const isNumber = (evt: KeyboardEvent): any => {\n  const charCode = (typeof evt.which !== \"undefined\") ? evt.which : evt.keyCode;\n  if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode !== 46) {\n     evt.preventDefault()\n  } else {\n     return true\n  }\n};\n\nexport class AddressManager {\n    urlBaseIBGE: string = 'https://servicodados.ibge.gov.br/api/v1/localidades';\n\n    config: object = {\n        method: 'GET',\n        mode: 'cors',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        }\n    };\n\n    public constructor(public urlIBGE?: string | undefined, public configuration?: Object | undefined) {\n        this.urlIBGE = urlIBGE || this.urlBaseIBGE;\n        this.configuration = configuration || this.config;\n    };\n\n    public states() {\n        return fetch(`${this.urlIBGE}/estados`, this.configuration).then((response) => response.json())\n    };\n\n    public cities(codeState = null) {\n        const url = codeState ? `${this.urlIBGE}/estados/${codeState}/municipios` : `${this.urlIBGE}/municipios`;\n        return fetch(url, this.configuration).then((response) => response.json())\n    };\n\n    public neighborhoods(codeCity = null) {\n        const url = codeCity ? `${this.urlIBGE}/municipios/${codeCity}/subdistritos` : `${this.urlIBGE}/subdistritos`;\n        return fetch(url, this.configuration).then((response) => response.json())\n    }\n\n    public searchCep(cep: string) {\n        // Nova variável \"cep\" somente com dígitos.\n        const newCep = cep.replace(/\\D/g, '');\n\n        // Expressão regular para validar o CEP.\n        const validateZipCode = /^[0-9]{8}$/;\n        if (! validateZipCode.test(newCep)) {\n            return 'Formato de CEP inválido.'\n        }\n        return fetch(`https://viacep.com.br/ws/${cep}/json/`, this.configuration)\n            .then((response) => response.json())\n    }\n}\n"],"names":[],"mappings":"IAAa,GAAG,GAAG,UAAC,CAAS,EAAE,CAAS,IAAa,OAAA,CAAC,GAAG,CAAC,IAAC;IAE9C,QAAQ,GAAG;IACpB,IAAM,KAAK,GAAG,kGAAkG,CAAA;IAChH,OAAO,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAA;AAC1C,EAAE;IAEW,SAAS,GAAG,cAAM,OAAA,CAAC,QAAQ,EAAE,IAAC;IAE9B,aAAa,GAAG,UAAC,GAAW;IACvC,IAAM,OAAO,GAAG,IAAI,MAAM,CACtB,mBAAmB;QACnB,kDAAkD;QAClD,6BAA6B;QAC7B,iCAAiC;QACjC,0BAA0B;QAC1B,oBAAoB,EACpB,GAAG,CACN,CAAC;IAEF,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;AAC1B,EAAE;IAEW,UAAU,GAAG,UAAC,GAAW,EAAE,KAAa;IACnD,OAAO,GAAG,IAAI,KAAK,GAAG,GAAG,GAAG,KAAK,CAAA;AACnC,EAAE;IAEW,KAAK,GAAG,UAAC,EAAU;IAC9B,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,IAAK,OAAA,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,GAAA,CAAC,CAAA;AAC1D,EAAE;IAEW,eAAe,GAAG,UAAC,GAAW;IACzC,OAAO,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAS,GAAG;QACtC,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAA;KAClE,CAAC,CAAA;AACJ,EAAE;IAEW,WAAW,GAAG,UAAC,GAAW;;IAEnC,OAAA,GAAG,CAAC,KAAK,CAAC,oEAAoE,CAAC;SAC1E,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,WAAW,EAAE,GAAA,CAAC;SACvC,IAAI,CAAC,GAAG,CAAC;AAFd,EAEe;IAEN,aAAa,GAAG,UAAC,KAAa;IACzC,IAAM,KAAK,GAAG,yJAAyJ,CAAC;IACxK,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAA;AACxC,EAAE;AAEF;;;;;;IAMa,kBAAkB,GAAG,UAAC,QAA0B,EAAE,GAAkB,EAAE,eAAuB;;IAEtG,IAAM,IAAI,GAAG,QAAQ,CAAC;IACtB,IAAI,QAAQ,CAAC;IACf,QAAQ,eAAe;QACpB,KAAK,YAAY;YACb,QAAQ,GAAG,eAAe,CAAC;YAC5B,MAAM;QACT,KAAK,WAAW;YACZ,QAAQ,GAAG,SAAS,CAAC;YACtB,MAAM;QACT,KAAK,WAAW;YACZ,QAAQ,GAAG,WAAW,CAAC;YACxB,MAAM;QAET;YACG,OAAO,KAAK,CAAA;KACjB;IAED,IAAI,IAAI,GAAG,CAAC,OAAO,GAAG,CAAC,KAAK,KAAK,WAAW,IAAI,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC;IAExE,IAAM,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;;IAE5C,IAAI,IAAI,KAAK,EAAE,EAAE;QACb,IAAI,CAAC,IAAI,EAAE,CAAC;QACb,OAAO,KAAK,CAAA;KACd;;;;IAID,IACI,CAAC,GAAG,CAAC,OAAO;QACZ,IAAI,KAAK,CAAC;QACV,IAAI,KAAK,CAAC;QACV,IAAI,KAAK,EAAE;QACX,IAAI,KAAK,EAAE;QACX,IAAI,KAAK,EAAE;SACV,IAAI,KAAK,EAAE,KAAK,IAAI,KAAK,EAAE,IAAI,SAAS,KAAK,GAAG,CAAC,CAAC;QACnD,IAAI,KAAK,EAAE,EACb;QACC,OAAO,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;KACpC;AACH,EAAE;IAEW,QAAQ,GAAG,UAAC,GAAkB;IACzC,IAAM,QAAQ,GAAG,CAAC,OAAO,GAAG,CAAC,KAAK,KAAK,WAAW,IAAI,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC;IAC9E,IAAI,QAAQ,GAAG,EAAE,KAAK,QAAQ,GAAG,EAAE,IAAI,QAAQ,GAAG,EAAE,CAAC,IAAI,QAAQ,KAAK,EAAE,EAAE;QACvE,GAAG,CAAC,cAAc,EAAE,CAAA;KACtB;SAAM;QACJ,OAAO,IAAI,CAAA;KACb;AACH,EAAE;;IAcE,wBAA0B,OAA4B,EAAS,aAAkC;QAAvE,YAAO,GAAP,OAAO,CAAqB;QAAS,kBAAa,GAAb,aAAa,CAAqB;QAXjG,gBAAW,GAAW,qDAAqD,CAAC;QAE5E,WAAM,GAAW;YACb,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE;gBACL,MAAM,EAAE,kBAAkB;gBAC1B,cAAc,EAAE,kBAAkB;aACrC;SACJ,CAAC;QAGE,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,IAAI,CAAC,WAAW,CAAC;QAC3C,IAAI,CAAC,aAAa,GAAG,aAAa,IAAI,IAAI,CAAC,MAAM,CAAC;KACrD;IAEM,+BAAM,GAAb;QACI,OAAO,KAAK,CAAI,IAAI,CAAC,OAAO,aAAU,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,UAAC,QAAQ,IAAK,OAAA,QAAQ,CAAC,IAAI,EAAE,GAAA,CAAC,CAAA;KAClG;IAEM,+BAAM,GAAb,UAAc,SAAgB;QAAhB,0BAAA,EAAA,gBAAgB;QAC1B,IAAM,GAAG,GAAG,SAAS,GAAM,IAAI,CAAC,OAAO,iBAAY,SAAS,gBAAa,GAAM,IAAI,CAAC,OAAO,gBAAa,CAAC;QACzG,OAAO,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,UAAC,QAAQ,IAAK,OAAA,QAAQ,CAAC,IAAI,EAAE,GAAA,CAAC,CAAA;KAC5E;IAEM,sCAAa,GAApB,UAAqB,QAAe;QAAf,yBAAA,EAAA,eAAe;QAChC,IAAM,GAAG,GAAG,QAAQ,GAAM,IAAI,CAAC,OAAO,oBAAe,QAAQ,kBAAe,GAAM,IAAI,CAAC,OAAO,kBAAe,CAAC;QAC9G,OAAO,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,UAAC,QAAQ,IAAK,OAAA,QAAQ,CAAC,IAAI,EAAE,GAAA,CAAC,CAAA;KAC5E;IAEM,kCAAS,GAAhB,UAAiB,GAAW;;QAExB,IAAM,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;;QAGtC,IAAM,eAAe,GAAG,YAAY,CAAC;QACrC,IAAI,CAAE,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAChC,OAAO,0BAA0B,CAAA;SACpC;QACD,OAAO,KAAK,CAAC,8BAA4B,GAAG,WAAQ,EAAE,IAAI,CAAC,aAAa,CAAC;aACpE,IAAI,CAAC,UAAC,QAAQ,IAAK,OAAA,QAAQ,CAAC,IAAI,EAAE,GAAA,CAAC,CAAA;KAC3C;IACL,qBAAC;AAAD,CAAC;;;;"}